.box1{
    // 后代元素选择器
    .box2{
        color: red;
    }
    // 子元素选择器
    >.box3{
        color:yellow;
        &:hover{
            color: orchid;
        }
    }

    // 为box1设置一个hover,& 符号表示一个外层的父元素
    &:hover{
        color: orange;
    }

    div &{
        width: 100px;
    }

}

.p1{
    width: 100px;
    height: 200px;

}
//:extend()对当前选择器扩展指定选择器的样式（选择器分组）
.p2:extend(.p1){
    color: red;
}
// .p2{
//     width: 100px;
//     height: 200px;
//     color: red;   
// }

.p3{
    //直接对指定的样式进行引用，这里相当于将p1的样式在这里进行复制
    //mixin 混合
    .p1();
}

//使用类选择器时可以在后边添加一个括号，这时我们实际上就创建了一个mixins
.p4(){
    width: 100px;
    height: 100px;
    background-color: red;
}

.p5{
    .p4;
}

// 混合函数：在混合函数中可以直接设置变量
.test(@w:50px){
    width: @w;
    height: 100px;
    border: 1px solid red;
}

div{
    //调用混合函数，按顺序传入参数
    .test();
    .test(100px);
    // .test(@w:100px);
}